{"version":3,"sources":["components/LetterBlock.js","components/Drawing.js","components/Display.js","helper/index.js","actions/index.js","containers/Display.js","components/Input.js","containers/Input.js","components/IncorrectGuesses.js","containers/IncorrectGuesses.js","components/Hangman.js","reducers/index.js","reducers/word.js","reducers/words.js","reducers/iswordsloading.js","reducers/guesses.js","reducers/strikes.js","reducers/gamestatus.js","index.js"],"names":["LetterBlock","_ref","letter","_ref$faded","faded","letterBlockClass","react_default","a","createElement","className","Drawing","renderCanvas","strikes","_this","props","c","document","getElementById","ctx","getContext","clearRect","width","height","lineWidth","beginPath","moveTo","bezierCurveTo","stroke","arc","Math","PI","fill","lineTo","this","id","React","Component","Display","checkGuess","_this$props","word","guesses","updateStrikes","setGameStatus","guess","length","console","log","includes","checkGameOver","isGameWon","isGameLost","_this$props2","split","reduce","accum","char","renderLetters","_this$props3","gameStatus","renderLettersWhenLost","map","components_LetterBlock","key","random","_this$props4","fetchFromAPI","prevProps","arr","_this$props5","words","setRandomWord","randomWord","_","sample","_this$props6","isWordsLoading","in progress","game won","game lost","components_Drawing","setWordsLoading","bool","type","payload","connect","state","dispatch","fetch","CORS_PROXY","then","resp","text","updateWords","setWord","status","Input","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","startNewGame","handleKeyDown","event","updateGuesses","isGuessingWord","toLowerCase","letters","handleKeyClick","submitGuess","preventDefault","input","value","trim","setState","toggleInputMethod","renderInput","renderGameOver","renderSubmitForm","renderKeyboard","convertToKeys","str","onClick","onSubmit","ref","node","addEventListener","addGuesses","setNewGame","IncorrectGuesses","splitWord","HangMan","containers_Display","containers_Input","containers_IncorrectGuesses","rootReducer","combineReducers","arguments","undefined","action","toConsumableArray","concat","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","Hangman"],"mappings":"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","file":"static/js/main.29a1e39b.chunk.js","sourcesContent":["import React from 'react';\nimport '../styles/LetterBlock.scss';\n\nconst LetterBlock = ({letter, faded = false}) => {\n  const letterBlockClass = faded ? \"square faded\" : \"square\";\n  return(\n    <li className={letterBlockClass}>\n        {letter}\n    </li>\n  )\n}\n\nexport default LetterBlock;","import React from 'react';\nimport '../styles/Drawing.scss';\n\nclass Drawing extends React.Component {\n\n  componentDidMount() {\n    this.renderCanvas();\n  }\n\n  renderCanvas = () => {\n    const { strikes } = this.props;\n\n    let c = document.getElementById(\"drawing\");\n\n    if (c === null) {\n      return;\n    }\n\n    const ctx = c.getContext(\"2d\");\n    ctx.clearRect(0, 0, c.width, c.height);\n\n    ctx.lineWidth = 3;\n\n    if (strikes >= 0) {\n      //draw hangman stage\n      ctx.beginPath();\n      ctx.moveTo(90, 98);\n      ctx.bezierCurveTo(98, 45, 135, 38, 173, 27);\n      ctx.stroke();\n\n      ctx.beginPath();\n      ctx.moveTo(171, 26);\n      ctx.bezierCurveTo(219, 105, 195, 225, 188, 260);\n      ctx.stroke();\n\n      ctx.beginPath();\n      ctx.arc(188, 265, 5, 0, 2 * Math.PI);\n      ctx.fill();\n    }\n\n \n\n    if (strikes >= 1) {\n      //draw circle face\n      ctx.beginPath();\n      ctx.arc(97, 123, 26, 0, 2 * Math.PI);\n      ctx.stroke();\n    }\n\n    if (strikes >= 2) {\n      //draw stick torso\n      ctx.beginPath();\n      ctx.moveTo(93, 148);\n      ctx.bezierCurveTo(93, 191, 109, 191, 127, 191);\n      ctx.stroke();\n    }\n\n    if (strikes >= 3) {\n      //draw left leg\n      ctx.beginPath();\n      ctx.moveTo(127.5, 191.25);\n      ctx.bezierCurveTo(116.25, 198.75, 108.75, 206.25, 108.75, 236.25);\n      ctx.stroke();\n\n      //draw right leg\n      ctx.beginPath();\n      ctx.moveTo(127.5, 191.25);\n      ctx.bezierCurveTo(138.75, 202, 146.25, 202.5, 165, 180);\n      ctx.stroke();\n    }\n\n    if (strikes >= 4) {\n      //draw left arm\n      ctx.beginPath();\n      ctx.moveTo(96.75, 168.75);\n      ctx.bezierCurveTo(90, 150, 82.5, 217.5, 45, 150);\n      ctx.stroke();\n    }\n\n    if (strikes >= 5) {\n      //draw right arm\n      ctx.beginPath();\n      ctx.moveTo(96, 168.75);\n      ctx.bezierCurveTo(108.75, 180, 123.75, 180, 150, 150);\n      ctx.stroke();\n    }\n\n    if (strikes >= 6) {\n      ctx.lineWidth = 4;\n\n      //draw left eye\n      ctx.beginPath();\n      ctx.moveTo(79, 109);\n      ctx.lineTo(90, 118);\n      ctx.stroke();\n\n      ctx.beginPath();\n      ctx.moveTo(90, 107);\n      ctx.lineTo(79, 118);\n      ctx.stroke();\n\n      //draw right eye\n      ctx.beginPath();\n      ctx.moveTo(98, 106);\n      ctx.lineTo(108, 114);\n      ctx.stroke();\n\n      ctx.beginPath();\n      ctx.moveTo(108, 104);\n      ctx.lineTo(98, 115);\n      ctx.stroke();\n\n      //draw frown\n      ctx.beginPath();\n      ctx.moveTo(98, 142);\n      ctx.bezierCurveTo(101, 127, 112, 131, 115, 132);\n      ctx.stroke();\n    }\n  }\n\n  render() {\n    return (\n      <canvas id=\"drawing\" width=\"225\" height=\"300\">\n        {this.renderCanvas()}\n      </canvas>\n    );\n  }\n}\n\nexport default Drawing;","import React from 'react';\nimport LetterBlock from './LetterBlock';\nimport Drawing from './Drawing';\nimport { getRandomWord } from '../helper';\nimport '../styles/Display.scss';\n\nclass Display extends React.Component {\n\n  componentDidMount() {\n    const { fetchFromAPI } = this.props;\n    fetchFromAPI();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { guesses, strikes, words, setRandomWord } = this.props;\n\n    if(prevProps.guesses !== guesses) {\n      this.checkGuess();\n    }\n\n    if(prevProps.strikes !== strikes) {\n      this.checkGameOver();\n    }\n\n    if(prevProps.words !== words) {\n      let randomWord = getRandomWord(words);\n      console.log('sampled word is', randomWord);\n      setRandomWord(randomWord);\n    }\n  }\n\n  checkGuess = () => {\n    const { word, guesses, updateStrikes, setGameStatus } = this.props;\n    const guess = guesses[guesses.length - 1];\n\n    console.log('guess is', guess);\n    if (word === guess) {\n      console.log('you guessed the whole word right!');\n      setGameStatus('game won');\n    } else if (word.includes(guess)) {\n      console.log('you guessed right!');\n      this.checkGameOver();\n    } else {\n      console.log('you guessed wrong!');\n      updateStrikes();\n    }\n  }\n\n  checkGameOver = () => {\n    const { setGameStatus } = this.props;\n\n    if (this.isGameWon()) {\n      console.log('game is won!');\n      setGameStatus('game won');\n    }\n\n    if (this.isGameLost()) {\n      console.log('game is lost!');\n      setGameStatus('game lost');\n    }\n  }\n\n  isGameWon = () => {\n    const { guesses, word } = this.props;\n\n    //Check if every letter has been guessed\n    return word.split('').reduce( (accum, char) => {\n      return accum && guesses.includes(char);\n    }, true);\n  }\n\n  isGameLost = () => {\n    const { strikes } = this.props;\n    return strikes === 6;\n  }\n\n  renderLetters = () => {\n    const { word, guesses, gameStatus } = this.props;\n    console.log('word is', word, 'guesses is', guesses);\n\n    if (gameStatus === 'game lost') {\n      return this.renderLettersWhenLost();\n    } else if(word) {\n      return word.split('').map( letter => {\n        return guesses.includes(letter) \n          ? <LetterBlock key={Math.random()} letter={letter}/>\n          : <LetterBlock key={Math.random()} letter='_'/>\n      })\n    } else {\n      return 'Loading Word...';\n    }\n  }\n\n  renderLettersWhenLost = () => {\n    const { word, guesses } = this.props;\n    console.log('YOU LOSTTTTTTTT', word, guesses);\n    return word.split('').map( letter => {\n      return guesses.includes(letter) \n        ? <LetterBlock key={Math.random()} letter={letter}/>\n        : <LetterBlock key={Math.random()} faded=\"true\" letter={letter}/>\n    })\n  }\n\n  render() {\n    const { strikes, isWordsLoading, gameStatus } = this.props;\n    const MAX_STRIKES = 6;\n\n    const message ={\n      'in progress': 'Hangman',\n      'game won': 'You Won!',\n      'game lost': 'You Lost!'\n    };\n\n    return (\n      <section>\n        <header>\n          {message[gameStatus]}\n        </header>\n        <div>\n          Strikes Left:&nbsp;{MAX_STRIKES - strikes}\n        </div>\n        <Drawing\n          strikes={strikes}\n          />\n        <ul id='words_letters'>\n          {isWordsLoading\n            ? 'Loading Word...'\n            : this.renderLetters()}\n        </ul>\n      </section>\n    );\n  }\n}\n\nexport default Display;","import _ from 'lodash';\n\nexport const convertStringToArray = (str) => {\n  return str.split('\\n');\n};\n\nexport const getRandomWord = (arr) => {\n  return _.sample(arr);\n};\n","import { convertStringToArray } from \"../helper\";\n\nexport const addStrike = () => ({\n  type: 'ADD_STRIKE'\n});\n\nexport const addGuesses = (guess) => ({\n  type: 'ADD_GUESS',\n  guess,\n});\n\nexport const setWord = (word) => ({\n  type: 'SET_WORD',\n  word,\n});\n\nexport const setWordsLoading = (bool) => ({\n  type: 'SET_WORDS_LOADING',\n  payload: bool,\n});\n\nexport const updateWords = (words) => ({\n  type: 'ADD_WORDS',\n  words,\n});\n\nexport const setGameStatus = (status) => ({\n  type: 'SET_GAME_STATUS',\n  payload: status,\n});\n\nexport const setNewGame = (word) => ({\n  type: 'SET_NEW_GAME',\n  word,\n});\n\nexport const fetchFromAPI = () => {\n  return (dispatch) => {\n    dispatch(setWordsLoading(true));\n\n    const CORS_PROXY = 'https://cors-anywhere.herokuapp.com/';\n    const API = 'http://app.linkedin-reach.io/words';\n\n    fetch(CORS_PROXY+API)\n      .then(resp => resp.text())\n      .then(words => { \n        words = convertStringToArray(words);\n        dispatch(updateWords(words));\n        dispatch(setWordsLoading(false));\n      });\n  };\n};\n","import { connect } from 'react-redux';\nimport Display from '../components/Display';\nimport { addStrike, fetchFromAPI, setWord, setGameStatus } from '../actions';\n\nconst mapStateToProps = state => ({\n  word: state.word,\n  words: state.words,\n  isWordsLoading: state.isWordsLoading,\n  guesses: state.guesses,\n  strikes: state.strikes,\n  gameStatus: state.gameStatus,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  fetchFromAPI: () => { \n    dispatch(fetchFromAPI());\n  },\n  updateStrikes: () => {\n    dispatch(addStrike())\n  },\n  setRandomWord: (word) => {\n    dispatch(setWord(word));\n  },\n  setGameStatus: (status) => {\n    dispatch(setGameStatus(status));\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Display);","import React from 'react';\nimport _ from 'lodash';\nimport '../styles/Input.scss';\n\nclass Input extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isGuessingWord: false,\n    }\n\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  startNewGame = () => {\n    const { startNewGame, words } = this.props;\n\n    const randomWord = _.sample(words);\n\n    console.log('new word is', randomWord);\n\n    startNewGame(randomWord);\n  }\n\n  handleKeyDown = (event) => {\n    const { guesses, updateGuesses } = this.props;\n    const { isGuessingWord } = this.state;\n    const key = event.key.toLowerCase();\n    const letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'.toLowerCase().split('');\n\n    if(isGuessingWord) {\n      return;\n    }\n\n    if(!letters.includes(key)) {\n      return;\n    }\n\n    if(!guesses.includes(key)) {\n      updateGuesses(key);\n    }\n  }\n\n  handleKeyClick = (key) => {\n    const { updateGuesses } = this.props;\n    key = key.toLowerCase();\n    console.log('key is clicked!', key);\n\n    updateGuesses(key);\n  }\n\n  submitGuess = (event) => {\n    event.preventDefault();\n\n    const { updateGuesses } = this.props;\n    const guess = this.input.value.toLowerCase();  \n\n    if(guess.trim().length === 0) {\n      return;\n    }\n    console.log('your guess is', guess);\n\n    this.setState({\n      isGuessingWord: false,\n    });\n\n    updateGuesses(guess);\n  }\n\n  toggleInputMethod = () => {\n    this.setState({\n      isGuessingWord: !this.state.isGuessingWord\n    });\n  }\n\n  renderInput = () => {\n    const { isGuessingWord } = this.state;\n    const { gameStatus, isWordsLoading } = this.props;\n\n    if (isWordsLoading) {\n      return '';\n    } else if (gameStatus !== 'in progress') {\n      return this.renderGameOver();\n    } else {\n      return isGuessingWord\n      ? this.renderSubmitForm()\n      : this.renderKeyboard()\n    }\n  }\n\n  renderKeyboard = () => {\n    const { guesses } = this.props;\n\n    const convertToKeys = (str) => {\n      return str.split('').map(key => {\n        return (\n          <span \n            key={key}\n            className={ guesses.includes(key) ? 'key cancelled' : 'key'}\n            onClick={() => guesses.includes(key) ? '' : this.handleKeyClick(key)}>\n            {key}\n          </span>\n        );\n      })\n    };\n\n    return (\n      <section>\n        <div className=\"guess_message\">\n          Know the whole answer?\n        </div>\n        <button\n          onClick={this.toggleInputMethod} \n          className=\"guess_button\" \n          type=\"click\">\n          Make a Guess\n        </button>\n        <div className=\"keyboard\">\n          <div>\n            {convertToKeys('qwertyuiop')}\n          </div>\n          <div>\n            {convertToKeys('asdfghjkl')}\n          </div>\n          <div>\n            {convertToKeys('zxcvbnm')}\n          </div>\n        </div>\n      </section>\n    );\n  }\n\n  renderSubmitForm = () => {\n    return (\n      <div>\n        <h5>Make your guess</h5>\n        <form onSubmit={this.submitGuess}>\n          <input className=\"type_word\" ref={node => { this.input = node }} type=\"text\" />\n          <input className=\"submit_word\" type=\"submit\" value=\"submit\" />\n        </form>\n      </div>\n    );\n  }\n\n  renderGameOver = () => {\n    const { startNewGame } = this.props;\n\n    return (\n      <button \n        className=\"start_game\" \n        type=\"click\"\n        onClick={this.startNewGame}>\n        Start New Game\n      </button>\n    )\n  }\n\n  render() {\n    const { isGuessingWord } = this.state;\n    const { gameStatus } = this.props;\n\n    return (\n      <section>\n        {\n          this.renderInput()\n        }\n      </section>\n    );\n  }\n}\n\nexport default Input;","import { connect } from 'react-redux';\nimport { addGuesses, setNewGame } from '../actions';\nimport Input from '../components/Input';\n\nconst mapStateToProps = state => ({\n  guesses: state.guesses,\n  gameStatus: state.gameStatus,\n  words: state.words,\n  isWordsLoading: state.isWordsLoading,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  updateGuesses: (guess) => dispatch(addGuesses(guess)),\n  startNewGame: (word) => {\n    console.log('starting new game');\n    dispatch(setNewGame(word));\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Input);","import React from 'react';\nimport '../styles/IncorrectGuesses.scss';\nimport '../styles/LetterBlock.scss';\n\nconst IncorrectGuesses = (props) => {\n  const { word, guesses } = props;\n  const splitWord = word.split('');\n\n  return (\n    <section>\n      <h5>Incorrect Guesses</h5>\n      <ul id=\"incorrect_guesses\">\n        {guesses.map(guess => {\n          if(guess.length > 1) {\n            return <li className=\"word\">{guess}</li>\n          }\n\n          if(!splitWord.includes(guess)) {\n            return <li className=\"block\">{guess}</li>\n          }\n        })}\n      </ul>\n    </section>\n  )\n}\nexport default IncorrectGuesses;","import { connect } from 'react-redux';\nimport { addGuesses, addStrike } from '../actions';\nimport IncorrectGuesses from '../components/IncorrectGuesses';\n\nconst mapStateToProps = state => ({\n  guesses: state.guesses,\n  word: state.word,\n})\n\nexport default connect(mapStateToProps)(IncorrectGuesses);","import React from 'react';\nimport Display from '../containers/Display';\nimport Input from '../containers/Input';\nimport IncorrectGuesses from '../containers/IncorrectGuesses';\n\nconst HangMan = () => {\n  return (\n    <div className=\"game_wrapper\">\n      <main className=\"wrapper main\">\n        <Display />\n        <Input />\n      </main>\n      <aside className=\"wrapper side\">\n        <IncorrectGuesses />\n      </aside>\n    </div>\n  );\n}\n\nexport default HangMan;","import { combineReducers } from 'redux';\nimport { word } from './word';\nimport { words } from './words';\nimport { isWordsLoading } from './iswordsloading';\nimport { guesses } from './guesses';\nimport { strikes } from './strikes';\nimport { gameStatus } from './gamestatus';\n\nconst rootReducer = combineReducers({\n  word,\n  words,\n  isWordsLoading,\n  guesses,\n  strikes,\n  gameStatus,\n});\n\nexport default rootReducer;\n","export const word = (state = 'LOWERCASE', action) => {\n  switch (action.type) {\n    case 'SET_NEW_GAME':\n      return action.word;\n    case 'SET_WORD':\n      return action.word;\n    default: \n      return state;\n  }\n}","export const words = (state = [], action) => {\n  switch (action.type) {\n    case 'ADD_WORDS':\n      return [...state, ...action.words];\n    default: \n      return state;\n  }\n}","export const isWordsLoading = (state = false, action) => {\n  switch (action.type) {\n    case 'SET_WORDS_LOADING':\n      return action.payload;\n    default:\n      return state;\n  }\n}","export const guesses = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_NEW_GAME':\n      return [];\n    case 'ADD_GUESS':\n      return [...state, action.guess];\n    default: \n      return state;\n  }\n}","export const strikes = (state = 0, action) => {\n  switch (action.type) {\n    case 'SET_NEW_GAME':\n      return -1;\n    case 'ADD_STRIKE':\n      return state + 1;\n    default: \n      return state;\n  }\n}","//game status can be 'in progress', 'game won', 'game lost'\n\nexport const gameStatus = (state = 'in progress', action) => {\n  switch (action.type) {\n    case 'SET_NEW_GAME':\n      return 'in progress';\n    case 'SET_GAME_STATUS':\n      return action.payload;\n    default:\n      return state;\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Hangman from './components/Hangman';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport './styles/index.scss';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <Hangman />\n  </Provider>\n  , document.getElementById('root'));"],"sourceRoot":""}